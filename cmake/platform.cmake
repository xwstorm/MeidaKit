# Check current platform
set(MK_HOST_WINDOWS FALSE)
set(MK_HOST_MACOS FALSE)
set(MK_HOST_LINUX FALSE)

if ("x${CMAKE_HOST_SYSTEM_NAME}" STREQUAL "xWindows")
  set(MK_HOST_WINDOWS TRUE)
  message(STATUS "Compile host: Windows")
elseif ("x${CMAKE_HOST_SYSTEM_NAME}" STREQUAL "xDarwin")
  set(MK_HOST_MACOS TRUE)
  message(STATUS "Compile host: MacOS")
elseif ("x${CMAKE_HOST_SYSTEM_NAME}" STREQUAL "xLinux")
  set(MK_HOST_LINUX TRUE)
  message(STATUS "Compile host: Linux")
else()
  message(WARNING "Cannot recognized compile host, set default to Linux")
  set(MK_HOST_LINUX TRUE)
endif()

message(STATUS "CMAKE_SYSTEM_NAME=${CMAKE_SYSTEM_NAME}")


if (NOT MK_PLATFORM)
  if (MK_HOST_LINUX)
    set(MK_PLATFORM "linux")
    message(STATUS "build on linux")
  elseif(MK_HOST_WINDOWS)
    set(MK_PLATFORM "windows")
    message(STATUS "build on windows")
  elseif(MK_HOST_MACOS)
    set(MK_PLATFORM "macos")
    message(STATUS "build on macos")
  endif()
endif()


if(NOT BUILD_PLATFORM)
    message(STATUS "use default platform target")
    if(MK_HOST_WINDOWS)
        set(MK_BUILD_PLATFORM_WINDOWS TRUE)
    elseif(MK_HOST_MACOS)
        set(MK_BUILD_PLATFORM_MAC TRUE)
    elseif(MK_HOST_LINUX)
        set(MK_BUILD_PLATFORM_LINUX TRUE)
    endif()
else()
    message(STATUS "build on ${BUILD_PLATFORM}")
    if("x${BUILD_PLATFORM}" STREQUAL "xwindows")
        set(MK_BUILD_PLATFORM_WINDOWS TRUE)
    elseif("x${BUILD_PLATFORM}" STREQUAL "xmac")
        set(MK_BUILD_PLATFORM_MAC TRUE)
        include(${MK_ROOT_DIR}/cmake/mac.cmake)
    elseif("x${BUILD_PLATFORM}" STREQUAL "xlinux")
        set(MK_BUILD_PLATFORM_LINUX TRUE)
        include(${MK_ROOT_DIR}/cmake/linux.cmake)
    elseif("x${BUILD_PLATFORM}" STREQUAL "xios")
        set(MK_BUILD_PLATFORM_IOS TRUE)
        include(${MK_ROOT_DIR}/cmake/ios.cmake)
    elseif("x${BUILD_PLATFORM}" STREQUAL "xandroid")
        set(MK_BUILD_PLATFORM_ANDROID TRUE)
        include(${MK_ROOT_DIR}/cmake/android.cmake)
    endif()
endif()

if(MK_BUILD_PLATFORM_WINDOWS)
    include(${MK_ROOT_DIR}/cmake/windows.cmake)
elseif(MK_BUILD_PLATFORM_MAC)
    include(${MK_ROOT_DIR}/cmake/mac.cmake)
elseif(MK_BUILD_PLATFORM_LINUX)
    include(${MK_ROOT_DIR}/cmake/linux.cmake)
elseif(MK_BUILD_PLATFORM_IOS)
    include(${MK_ROOT_DIR}/cmake/ios.cmake)
elseif(MK_BUILD_PLATFORM_ANDROID)
    include(${MK_ROOT_DIR}/cmake/android.cmake)
endif()
